/* Generated by JTB 1.4.11 */
package medit.BPP.syntaxtree;

import medit.BPP.visitor.IRetArguVisitor;
import medit.BPP.visitor.IRetVisitor;
import medit.BPP.visitor.IVoidArguVisitor;
import medit.BPP.visitor.IVoidVisitor;

public class NodeOptional implements INode {

	private static final long serialVersionUID = 1411L;

	public INode node;

	public NodeOptional() {
		this.node = null;
	}

	public NodeOptional(final INode n) {
		this.addNode(n);
	}

	@Override
	public <R, A> R accept(final IRetArguVisitor<R, A> vis, final A argu) {
		return vis.visit(this, argu);
	}

	@Override
	public <R> R accept(final IRetVisitor<R> vis) {
		return vis.visit(this);
	}

	@Override
	public <A> void accept(final IVoidArguVisitor<A> vis, final A argu) {
		vis.visit(this, argu);
	}

	@Override
	public void accept(final IVoidVisitor vis) {
		vis.visit(this);
	}

	public void addNode(final INode n) {
		if (this.node != null)
			throw new Error("Attempt to set optional node twice");
		this.node = n;
	}

	public boolean present() {
		return this.node != null;
	}

}
