/* Generated by JTB 1.4.11 */
package medit.BPP.syntaxtree;

import medit.BPP.visitor.IRetArguVisitor;
import medit.BPP.visitor.IRetVisitor;
import medit.BPP.visitor.IVoidArguVisitor;
import medit.BPP.visitor.IVoidVisitor;

public class WhileExpression implements INode {

	private static final long serialVersionUID = 1411L;

	public NodeToken f0;

	public RelationalExprssion f1;

	public NodeToken f2;

	public NodeListOptional f3;

	public NodeToken f4;

	public WhileExpression(final NodeToken n0, final RelationalExprssion n1, final NodeToken n2,
			final NodeListOptional n3, final NodeToken n4) {
		this.f0 = n0;
		this.f1 = n1;
		this.f2 = n2;
		this.f3 = n3;
		this.f4 = n4;
	}

	@Override
	public <R, A> R accept(final IRetArguVisitor<R, A> vis, final A argu) {
		return vis.visit(this, argu);
	}

	@Override
	public <R> R accept(final IRetVisitor<R> vis) {
		return vis.visit(this);
	}

	@Override
	public <A> void accept(final IVoidArguVisitor<A> vis, final A argu) {
		vis.visit(this, argu);
	}

	@Override
	public void accept(final IVoidVisitor vis) {
		vis.visit(this);
	}

}
